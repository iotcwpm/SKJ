<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="logistic_8hpp" kind="file">
    <compoundname>logistic.hpp</compoundname>
    <includes refid="common_8hpp" local="no">fisl/common.hpp</includes>
    <includes refid="function_8hpp" local="no">fisl/math/functions/function.hpp</includes>
    <includedby refid="maturity_8hpp" local="no">maturity.hpp</includedby>
    <incdepgraph>
      <node id="292">
        <label>logistic.hpp</label>
        <link refid="logistic.hpp"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>fisl/array.hpp</label>
        <link refid="array_8hpp"/>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="296">
        <label>vector</label>
      </node>
      <node id="297">
        <label>algorithm</label>
      </node>
      <node id="294">
        <label>fisl/math/functions/function.hpp</label>
        <link refid="function_8hpp"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>fisl/common.hpp</label>
        <link refid="common_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="301">
        <label>model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>evaluation-skeleton.cpp</label>
        <link refid="evaluation-skeleton_8cpp"/>
      </node>
      <node id="302">
        <label>model.cxx</label>
        <link refid="model_8cxx"/>
      </node>
      <node id="298">
        <label>logistic.hpp</label>
        <link refid="logistic.hpp"/>
        <childnode refid="299" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>maturity.hpp</label>
        <link refid="maturity_8hpp"/>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classFisl_1_1Math_1_1Functions_1_1Logistic" prot="public">Fisl::Math::Functions::Logistic</innerclass>
    <innernamespace refid="namespaceFisl">Fisl</innernamespace>
    <innernamespace refid="namespaceFisl_1_1Math">Fisl::Math</innernamespace>
    <innernamespace refid="namespaceFisl_1_1Math_1_1Functions">Fisl::Math::Functions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_8hpp" kindref="compound" tooltip="Definitions of common #includes and typedefs.">fisl/common.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="function_8hpp" kindref="compound">fisl/math/functions/function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Fisl<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Math<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Functions<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12" refid="classFisl_1_1Math_1_1Functions_1_1Logistic" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic" kindref="compound" tooltip="Logistic function parameterised.">Logistic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Function" kindref="compound">Function</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a6a6a4b496ba9a7b67c3a83a9734b4cab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a6a6a4b496ba9a7b67c3a83a9734b4cab" kindref="member">inflection_</ref>;</highlight></codeline>
<codeline lineno="16" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1aa35fe7065c953d2a81856a23d4e1ad8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1aa35fe7065c953d2a81856a23d4e1ad8d" kindref="member">steepness_</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a1f7c221d68d57b0854d5982559147f8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a1f7c221d68d57b0854d5982559147f8e" kindref="member" tooltip="Value of x at which y==0.50.">inflection</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a6a6a4b496ba9a7b67c3a83a9734b4cab" kindref="member">inflection_</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a86790fe7ddb1493620029d716adc43ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic" kindref="compound" tooltip="Logistic function parameterised.">Logistic</ref>&amp;<sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a86790fe7ddb1493620029d716adc43ee" kindref="member">inflection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a6a6a4b496ba9a7b67c3a83a9734b4cab" kindref="member">inflection_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a1f2a5246d1694df5b3110a1232fe9784" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a1f2a5246d1694df5b3110a1232fe9784" kindref="member">steepness</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1aa35fe7065c953d2a81856a23d4e1ad8d" kindref="member">steepness_</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a147e97fbe7ae3541a9b03f0a50cb1fab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic" kindref="compound" tooltip="Logistic function parameterised.">Logistic</ref>&amp;<sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a147e97fbe7ae3541a9b03f0a50cb1fab" kindref="member">steepness</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1aa35fe7065c953d2a81856a23d4e1ad8d" kindref="member">steepness_</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1ae60f6c2e49f9dfac4df6a84d6099d88d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1ae60f6c2e49f9dfac4df6a84d6099d88d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0/(1.0+std::pow(19,(<ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1a6a6a4b496ba9a7b67c3a83a9734b4cab" kindref="member">inflection_</ref>-x)/<ref refid="classFisl_1_1Math_1_1Functions_1_1Logistic_1aa35fe7065c953d2a81856a23d4e1ad8d" kindref="member">steepness_</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}}}</highlight></codeline>
    </programlisting>
    <location file="/media/Data/Trophia/P12013_Trident/Code/fisl/fisl/math/functions/logistic.hpp"/>
  </compounddef>
</doxygen>
