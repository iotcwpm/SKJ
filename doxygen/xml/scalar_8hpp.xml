<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="scalar_8hpp" kind="file">
    <compoundname>scalar.hpp</compoundname>
    <includedby refid="scalars_8hpp" local="no">scalars.hpp</includedby>
    <invincdepgraph>
      <node id="341">
        <label>model.hpp</label>
        <link refid="indi_2indi_2model_8hpp"/>
        <childnode refid="342" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>fishes.hpp</label>
        <link refid="fishes_8hpp"/>
        <childnode refid="341" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>scalars.hpp</label>
        <link refid="scalars_8hpp"/>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
      <node id="342">
        <label>indi.hpp</label>
        <link refid="indi_8hpp"/>
        <childnode refid="343" relation="include">
        </childnode>
      </node>
      <node id="338">
        <label>scalar.hpp</label>
        <link refid="scalar.hpp"/>
        <childnode refid="339" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>io-skipjack.cpp</label>
        <link refid="io-skipjack_8cpp"/>
      </node>
      <node id="343">
        <label>io-skipjack.hpp</label>
        <link refid="io-skipjack_8hpp"/>
        <childnode refid="344" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classIndi_1_1Scalar" prot="public">Indi::Scalar</innerclass>
    <innernamespace refid="namespaceIndi">Indi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Indi<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Code,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type</highlight></codeline>
<codeline lineno="8"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="9" refid="classIndi_1_1Scalar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="classIndi_1_1Scalar_1a8434fe62441962fb8868e05559219e5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a8434fe62441962fb8868e05559219e5d" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="15" refid="classIndi_1_1Scalar_1a882dc595f5ad7ecc4789ceae5fc2066a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a882dc595f5ad7ecc4789ceae5fc2066a" kindref="member">incr</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="classIndi_1_1Scalar_1afea8ca26cdbd2916db0343b62e82bb89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1afea8ca26cdbd2916db0343b62e82bb89" kindref="member">Scalar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>(0){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classIndi_1_1Scalar_1abbbe9c705dcca678273286ac7a7c923e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1abbbe9c705dcca678273286ac7a7c923e" kindref="member">Scalar</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>real):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>((real-<ref refid="classIndi_1_1Scalar_1a8434fe62441962fb8868e05559219e5d" kindref="member">base</ref>)/<ref refid="classIndi_1_1Scalar_1a882dc595f5ad7ecc4789ceae5fc2066a" kindref="member">incr</ref>){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="classIndi_1_1Scalar_1a331258c21945069d21b33f138b80c13d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>float(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a8434fe62441962fb8868e05559219e5d" kindref="member">base</ref>+<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>*<ref refid="classIndi_1_1Scalar_1a882dc595f5ad7ecc4789ceae5fc2066a" kindref="member">incr</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="classIndi_1_1Scalar_1af7707be38ff74d1795b6797f43b6fb49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1af7707be38ff74d1795b6797f43b6fb49" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>&lt;other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classIndi_1_1Scalar_1a8b4f4d4d22d621c8ef71119f5033ebbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a8b4f4d4d22d621c8ef71119f5033ebbb" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>&gt;other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="classIndi_1_1Scalar_1a23f9daaa03c0206fe7cbd1159b895d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/><ref refid="classIndi_1_1Scalar_1a23f9daaa03c0206fe7cbd1159b895d31" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>++;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="classIndi_1_1Scalar_1a7a0cb9c68a16607696732fa9bed8f3a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a7a0cb9c68a16607696732fa9bed8f3a3" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref><sp/>+=<sp/>other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classIndi_1_1Scalar_1ad2212ea7740d855d14273138308e3972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1ad2212ea7740d855d14273138308e3972" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref><sp/>-=<sp/>other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classIndi_1_1Scalar_1a1151d4649b64ec13fbf8bc36f78eaa92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a1151d4649b64ec13fbf8bc36f78eaa92" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref><sp/>*=<sp/>other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classIndi_1_1Scalar_1a06e675e0645879f01e17401f3067b50c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar_1a06e675e0645879f01e17401f3067b50c" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIndi_1_1Scalar" kindref="compound">Scalar</ref>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref><sp/>/=<sp/>other.<ref refid="classIndi_1_1Scalar_1a6303dd7c677774cd633a638b0c4260ac" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//end<sp/>namespace<sp/>Indi</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nbentley/Trophia/Code/indi/indi/scalar.hpp"/>
  </compounddef>
</doxygen>
