sso = read.table(paste(qma,'/input/posteriors.sso',sep=''),header=T)
qma = 'rco3'
sso = read.table(paste(qma,'/input/posteriors.sso',sep=''),header=T)
sso = read.table(paste(qma,'/input/posteriors.sso',sep=''),header=T,sep=' ')
head(sso)
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
names(sso)
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:7) names(sso)[orig==paste0('AgeSel_1P_1_FISHERY1',year)] <- paste0('select(',age,')')
names(sso)
qma <- 'rco3'
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:7) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
names(sso)
qma <- 'rco2'
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:7) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
names(sso)
qma <- 'rco3'
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:7) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
names(sso)
qma <- 'rco3'
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:3) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
names(sso)
# Relabel the posterior.sso files so the headers are compatible with what is in the model
for(qma in c('rco3','rco7','rco2')){
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:3) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
write.table(sso,paste0(qma,'/input/posteriors.tsv'),header=T,sep='\t')
}
for(qma in c('rco3','rco7','rco2')){
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:3) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
write.table(sso,paste0(qma,'/input/posteriors.tsv'),row.names=F,sep='\t')
}
for(qma in c('rco3','rco7','rco2')){
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:3) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
write.table(sso,paste0(qma,'/input/posteriors.tsv'),quote=F,,row.names=F,sep='\t')
}
# Relabel the posterior.sso files so the headers are compatible with what is in the model
for(qma in c('rco3','rco7','rco2')){
sso <- read.table(paste0(qma,'/input/posteriors.sso'),header=T,sep=' ')
# Rename
orig <- names(sso)
names(sso)[orig=='NatM_p_1_Mal_GP_1'] <- 'm_male'
names(sso)[orig=='NatM_p_1_Fem_GP_1'] <- 'm_female'
names(sso)[orig=='SR_LN.R0.'] <- 'r0'
names(sso)[orig=='SR_BH_steep'] <- 'steep'
for(year in 1970:2011) names(sso)[orig==paste0('Main_RecrDev_',year)] <- paste0('recdev(',year,')')
for(age in 0:3) names(sso)[orig==paste0('AgeSel_1P_',age,'_FISHERY1')] <- paste0('select(',age,')')
# Remove some unecesssary
sso$Empty <- NULL
write.table(sso,paste0(qma,'/input/posteriors.tsv'),quote=F,,row.names=F,sep='\t')
}
source('../../common.R',local=T)
load(c(
'procedures','samples',
'performances',
'track'
),from='../output')
perfs <- merge(procedures,
ddply(performances,.(procedure),summarise,
yield = mean(catches_total)/1000*4,
stability = -mean(catches_mapc),
status = mean(status_mean),
safety10 = 1-mean(status_b10),
safety20 = 1-mean(status_b20)
)
)
track <- within(track,{
procedure <- factor(procedure)
})
# Plot of tradeoff between two performance statistics
plot_tradeoff <- function(data,x,y,colour,shape){
data <- within(data,{
x = data[,names(x)]
y = data[,names(y)]
colour = factor(data[,names(colour)])
shape = factor(data[,names(shape)])
})
print(
ggplot(data,aes(x=x,y=y,colour=colour,shape=shape)) +
geom_point(size=3,alpha=0.7) +
geom_vline(x=0,alpha=0) +
geom_hline(y=0,alpha=0) +
scale_shape_manual(values=1:10) +
labs(x=x[[1]],y=y[[1]],colour=colour[[1]],shape=shape[[1]])
)
}
head(perfs)
setwd("~/Trophia/Code/ioskj/evaluate/display")
source('../../common.R',local=T)
load(c(
'procedures','samples',
'performances',
'track'
),from='../output')
perfs <- merge(procedures,
ddply(performances,.(procedure),summarise,
yield = mean(catches_total)/1000*4,
stability = -mean(catches_mapc),
status = mean(status_mean),
safety10 = 1-mean(status_b10),
safety20 = 1-mean(status_b20)
)
)
track <- within(track,{
procedure <- factor(procedure)
})
# Plot of tradeoff between two performance statistics
head(perfs)
summary(perfs)
stats <- c('yield','stability','status','safety10','safety20','cpue_w_ps','cpue_m_pl','cpue_e_gn')
perfs <- merge(procedures,
ddply(performances,.(procedure),summarise,
yield = mean(catches_total)/1000*4,
stability = -mean(catches_mapc),
status = mean(status_mean),
safety10 = 1-mean(status_b10),
safety20 = 1-mean(status_b20),
cpue_w_ps = mean(cpue_w_ps),
cpue_m_pl = mean(cpue_m_pl),
cpue_e_gn = mean(cpue_e_gn)
)
)
# List of names of performance statistics
stats <- c('yield','stability','status','safety10','safety20','cpue_w_ps','cpue_m_pl','cpue_e_gn')
names(performances)
perfs <- merge(procedures,
ddply(performances,.(procedure),summarise,
yield = mean(catches_total)/1000*4,
stability = -mean(catches_mapc),
status = mean(status_mean),
safety10 = 1-mean(status_b10),
safety20 = 1-mean(status_b20),
cpue_w_ps = mean(cpue_mean_w_ps),
cpue_m_pl = mean(cpue_mean_m_pl),
cpue_e_gn = mean(cpue_mean_e_gn)
)
)
# List of names of performance statistics
stats <- c('yield','stability','status','safety10','safety20','cpue_w_ps','cpue_m_pl','cpue_e_gn')
head(perfs)
summary(perfs)
summary(perfs[,stats])
mode(summary(perfs[,stats]))
type(summary(perfs[,stats]))
summary(perfs[,stats])[['cpue_e_gn']]
summary(perfs[,stats])$Var1
temp<-summary(perfs[,stats])
class(temp)
melt(perfs[,stats])
ggplot(melt(perfs[,stats]),aes(x=value)) + geom_density() + facet_wrap(~variable)
ggplot(melt(perfs[,stats]),aes(x=value)) + geom_density() + facet_wrap(~variable,scales='x_free')
ggplot(melt(perfs[,stats]),aes(x=value)) + geom_density() + facet_wrap(~variable,scales='free_x')
ggplot(melt(perfs[,stats]),aes(x=value)) + geom_density(fill='grey') + facet_wrap(~variable,scales='free_x')
ggplot(melt(perfs[,stats]),aes(x=value)) + geom_density(fill='grey') + facet_wrap(~variable,scales='free')
ggplot(subset(track,replicate<4 & quarter==0),aes(x=year+quarter/4,y=biomass_spawning_overall/1e6)) +
geom_line(aes(colour=procedure)) +
facet_wrap(~replicate,scales='free_y') +
geom_vline(x=2015,linetype=2) +
labs(x="Year",y="Spawning biomass (mil. t)") +
theme(legend.position='none')
ggplot(perfs),aes(x=cpue_w_ps,y=cpue_m_pl)) + geom_point()
ggplot(perfs,aes(x=cpue_w_ps,y=cpue_m_pl)) + geom_point()
ggplot(perfs,aes(x=cpue_w_ps,y=cpue_e_gn)) + geom_point()
head(perfs)
ggplot(perfs,aes(x=cpue_w_ps,y=cpue_e_gn)) + geom_point() + geom_abline()
ggplot(perfs,aes(x=cpue_w_ps,y=cpue_e_gn)) + geom_point() + geom_abline(linetype=3)
