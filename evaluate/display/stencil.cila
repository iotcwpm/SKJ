#title Indian Ocean skipjack model : management procedure evaluations

r
	source('../../common.R',local=T)

	# Load in model outputs
	load(c(
		'procedures',
		'samples',
		'performances'#,
		#'track'
	),from='../../evaluate/output')

	# Calculate performance statistics from performance measures
	perfs <- ddply(performances,.(procedure),summarise,
				   yield = mean(catches_total/1000*4),
				   yield_sd = sd(catches_total/1000*4),
				   stability = -mean(catches_mapc),
				   stability_sd = sd(catches_mapc),
				   status = mean(status_mean),
				   status_sd = sd(status_mean),
				   safety10 = 1-mean(status_b10),
				   safety10_sd = sd(status_b10),
				   safety20 = 1-mean(status_b20),
				   safety20_sd = sd(status_b20),
				   kobe_a = mean(kobe_a),
				   kobe_a_sd = sd(kobe_a),
				   kobe_d = mean(kobe_d),
				   kobe_d_sd = sd(kobe_d),
				   kobe_to_a = mean(kobe_to_a,na.rm=T),
				   kobe_to_a_sd = sd(kobe_to_a),
				   cpue_we_ps = mean(cpue_mean_we_ps),
				   cpue_we_ps_sd = sd(cpue_mean_we_ps),
				   cpue_ma_pl = mean(cpue_mean_ma_pl),
				   cpue_ma_pl_sd = sd(cpue_mean_ma_pl),
				   cpue_ea_gn = mean(cpue_mean_ea_gn),
				   cpue_ea_gn_sd = sd(cpue_mean_ea_gn)
	)
	# List of names of performance statistics
	stats <- c(
		'yield','stability',
		'status','safety10','safety20',
		'kobe_a','kobe_d','kobe_to_a',
		'cpue_we_ps','cpue_ma_pl','cpue_ea_gn'
	)
	# Merge in procedures to facilitate summaries by procedure parameters
	perfs <- merge(procedures,perfs)
	
	# Merge samples and performance
	samples$replicate <- 1:nrow(samples)
	sens <- merge(performances,samples)

	# Augment track
	track <- within(track,{
		replicate <- factor(replicate)
		procedure <- factor(procedure)
		biomass_spawners_overall = biomass_spawners_sw + biomass_spawners_nw + biomass_spawners_ma + biomass_spawners_ea
	})

	# Function for creating a signature for a MP instance
	mp_sig <- function(proc){
		row <- subset(procedures,procedure==proc)
		pars <- row[,3:12][!is.na(row[,3:12])]
		paste0(row$class,'(',paste(pars,collapse=','),')')
	}

	# Pick some example replicates for use in traces based on
	# average stock status in projections
	temp <- subset(track,procedure==1 & year>=2015)
	temp <- ddply(temp,.(replicate),summarise,by=mean(biomass_status))
	temp <- temp$replicate[order(temp$by)]
	replicate_egs <- temp[floor(length(temp)*c(0.2,0.5,0.8))]
	replicate_egs <- factor(replicate_egs,levels=replicate_egs,ordered=T)

	# Quantile plotting function
	plot_ribbon <- function(data,y,ylab='Value',xlab='Year'){
		# Evaluation the y expression
		data$y <- eval(y,envir=data)
		# Calculate quantiles
		quantiles = ddply(data,.(year),function(data){
			quantiles = quantile(data$y,p=c(0.01,0.05,0.1,0.25,0.5,0.75,0.9,0.95,0.99),na.rm=T)
			data.frame(
				p1 = quantiles[1],
				p5 = quantiles[2],
				p10 = quantiles[3],
				p25 = quantiles[4],
				p50 = quantiles[5],
				p75 = quantiles[6],
				p90 = quantiles[7],
				p95 = quantiles[8],
				p99 = quantiles[9]
			)
		})
		# Plot
		temp <- subset(data,replicate %in% replicate_egs)
		temp$replicate <- factor(temp$replicate,levels=replicate_egs)
		p = ggplot() +
			geom_ribbon(data=quantiles,aes(x=year,ymin=p5,ymax=p95),alpha=0.1) + 
			geom_ribbon(data=quantiles,aes(x=year,ymin=p10,ymax=p90),alpha=0.1) + 
			geom_ribbon(data=quantiles,aes(x=year,ymin=p25,ymax=p75),alpha=0.1) +
			geom_line(data=temp,aes(x=year,y=y,colour=replicate),alpha=0.6) +
			geom_vline(x=2014.8,linetype=2) +
			geom_hline(y=0,alpha=0) +
			scale_colour_manual(values=hsv(c(0,0.66,0.33),0.6,0.6)) +
			labs(x=xlab,y=ylab) +
			theme(legend.position='none')
		print(p)
		p
	}

	# Plot of tradeoff between two performance statistics
	plot_tradeoff <- function(data,x,y,colour,shape){
		data <- within(data,{
			xm = data[,names(x)]
			xsd = data[,paste0(names(x),'_sd')]
			ym = data[,names(y)]
			ysd = data[,paste0(names(y),'_sd')]
			colour = factor(data[,names(colour)])
			shape = factor(data[,names(shape)])
		})
		print(
			ggplot(data,aes(colour=colour,shape=shape)) +
				geom_point(aes(x=xm,y=ym),size=3,alpha=0.7) + 
				geom_segment(aes(x=xm-xsd,xend=xm+xsd,y=ym,yend=ym),alpha=0.5) +
				geom_segment(aes(x=xm,xend=xm,y=ym-ysd,yend=ym+ysd),alpha=0.5) +
				geom_vline(xintercept=0,alpha=0) + 
				geom_hline(yintercept=0,alpha=0) + 
				scale_shape_manual(values=1:10) + 
				labs(x=x[[1]],y=y[[1]],colour=colour[[1]],shape=shape[[1]])
		)
	}


section
	h1 Methods and terminology

	This section provides an overview of the methods and terminology used for evaluating management procedures (i.e. management procedure evaluation, MPE). We provide examples of the types of figures and tables that are used in the following, more detailed, descriptions of evaluation results for each class of management procedure.

	section
		h1 Evaluations and replicates

		Each _evaluation_ of a management procedure is based on a _replicate_. Each replicate incorporates _parameter uncertainty_ through the random selection of a set of model parameters as well as _stochastic uncertainty_ through the random generation of _process uncertainty_ (e.g. recruitment variation) and _observation uncertainty_ (e.g. CPUE error). The parameter set for a replicate is drawn from all the possible parameter sets determined from model conditioning. For each evaluation, the particular management procedure is used to determine future simulated management which affects catches, which in turn affects stock biomass and other _performance measures_ ({refer #figure-one-rep-one-eval}). 

		The primary purpose of MPE is not to provide forecats of catch, biomass or other performance measures. Rather, it is to compare the performance, relative to management objectives, of alternative candidate management procedures. Thus, for each replicate, each of the candidate management procedures is evaluated ({refer #figure-one-rep-mult-evals}). This allows us to compare the performance of alternative MPs under exactly the same set of assumptions. Notice in ({refer #figure-one-rep-mult-evals}) that the biomass trajectories resulting from using alternative MPs often fluctuate in parallel. This is due to the same recruitment variations being used for each evaluation.

		figure #figure-one-rep-one-eval
			r format png size 17x15cm
				temp <- subset(track,quarter==0 & procedure %in% c(-1,1) & replicate==1)
				p1 <- ggplot(temp,aes(x=year,y=catches_total/1e3)) +
					geom_line(aes(group=procedure),colour='black',alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Catch (quarterly,kt)") + 
					theme(legend.position='none')
				p2 <- ggplot(temp,aes(x=year,y=biomass_spawners_overall/1e3)) +
					geom_line(aes(group=procedure),colour='black',alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Biomass (spawners,kt)") + 
					theme(legend.position='none')
				multiplot(p1,p2)
			figcaption
				Catch and biomass trajectories from a single evaluation of a single management procedure using a single parameter replicate.

		figure #figure-one-rep-mult-evals
			r format png size 17x15cm
				temp <- subset(track,quarter==0 & replicate==1)
				p1 <- ggplot(temp,aes(x=year,y=catches_total/1e3)) +
					geom_line(aes(colour=procedure),alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Catch (quarterly,kt)") + 
					theme(legend.position='none')
				p2 <- ggplot(temp,aes(x=year,y=biomass_spawners_overall/1e3)) +
					geom_line(aes(colour=procedure),alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Biomass (spawners,kt)") + 
					theme(legend.position='none')
				multiplot(p1,p2)
			figcaption
				Catch and biomass trajectories from multiple evaluations of multiple management procedure using a single parameter replicates. Each of the coloured future trajectories arises from applying one candidate management procedure.


		To be able to assess and compare the robustness of management procedures to uncertainty it is necessary to run evaluations for many replicates. {refer #figure-mult-rep} shows one hundred evaluations, each based on a different replicate, for a single management procedure. When presenting the trajectories from muliple evaluations, it is usually easier to ascertain both the central tendency and the variability of trajectories using quantile ribbons ({refer #figure-ribbons-eg-1}). The ribbons show the bands where 50%, 80% and 90% of trajectories fall. In addition, to indicate the expected inter-annual variability, the trajectories from three example replicates are shown separately. These example replicates were chosen as those that produced the 20th (red), 50th (blue) and 80th (green) percentile of average biomass of spawners under the constant effort management procedure. In all these plots the same three example replicates are used for ease of comparison. {refer #figure-ribbons-eg-1} shows the same plot for a management procedure which produces higher catches but consequently, declining stock status.

		figure #figure-mult-rep
			r format png size 17x15cm
				temp <- subset(track,quarter==0 & procedure %in% c(-1,1))
				p1 <- ggplot(temp,aes(x=year,y=catches_total/1e3)) +
					geom_line(aes(colour=replicate),alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Catch (quarterly,kt)") + 
					theme(legend.position='none')
				p2 <- ggplot(temp,aes(x=year,y=biomass_status)) +
					geom_line(aes(colour=replicate),alpha=0.3) +
					geom_vline(x=2014.8,linetype=2) +
					geom_hline(v=0,alpha=0) +
					labs(x="Year",y="Status (spawners,B/B0)") + 
					theme(legend.position='none')
				multiplot(p1,p2)
			figcaption
				Catch and biomass trajectories from multiple evaluations of a single management procedure using multiple parameter replicates. Each of the coloured trajectories arises from alternative replicate.

		figure #figure-ribbons-eg-1
			r format png size 17x15cm
				temp <- subset(track,quarter==3 & procedure %in% c(-1,1))
				p1 <- plot_ribbon(temp,y=quote(catches_total/1e3),ylab='Catch (last quarter,kt)')
				p2 <- plot_ribbon(temp,y=quote(biomass_status),ylab='Status (B/B0)')
				multiplot(p1,p2)
			figcaption
				Catch and biomass trajectory percentiles for management procedure {span text mp_sig(1)}.

		figure #figure-ribbons-eg-2
			r format png size 17x15cm
				temp <- subset(track,quarter==3 & procedure %in% c(-1,3))
				p1 <- plot_ribbon(temp,y=quote(catches_total/1e3),ylab='Catch (last quarter,kt)')
				p2 <- plot_ribbon(temp,y=quote(biomass_status),ylab='Status (B/B0)')
				multiplot(p1,p2)
			figcaption
				Catch and biomass trajectory percentiles for management procedure {span text mp_sig(3)}.

		{refer #figure-perf-dists} provides an overview of the distribution of each performance measure.

		figure #figure-perf-dists
			r format png size 17x17cm
				print(
					ggplot(melt(perfs[,stats]),aes(x=value)) + 
						geom_density(fill='grey') + facet_wrap(~variable,scales='free')
				)
			figcaption
				Distributions of performance statistics over all evaluations. This figure is intended principally to provide an indication of the range of performance statistics outcomes across all replicates and procedures.

section
	h1 Results

	section
		h1 Comparison of classes of management procedures

		In this section we provide an overview of the performance of the three classes of management procedures evaluated. This section is also used to introduce the summary figures and tables used in following sections.

		The following figures illustrate the trade offs between pairs of performance statistics:
			ul
				li {refer #figure-yield-status-all} : yield v status
				li {refer #figure-yield-safety-all} : yield v safety
				li {refer #figure-yield-stability-all} : yield v stability
				li {refer #figure-yield-abundance-all} : yield v abundance

		figure #figure-yield-status-all
			r format png size 17x10cm
				plot_tradeoff(
					perfs,
					x = list(yield='Yield (mean annual catch, kt)'),
					y = list(status='Status (mean of S/S0)'),
					colour = list(class='Class'),
					shape = list(class='Class')
				)
			figcaption
				Trade-off between yield and status performance statistics across all the management procedures evaluated.

		figure #figure-yield-safety-all
			r format png size 17x10cm
				plot_tradeoff(
					perfs,
					x = list(yield='Yield (mean annual catch, kt)'),
					y = list(safety10='Safety (P(B>0.1B0))'),
					colour = list(class='Class'),
					shape = list(class='Class')
				)
			figcaption
				Trade-off between yield and safety performance statistics across all the management procedures evaluated.

		figure #figure-yield-stability-all
			r format png size 17x10cm
				plot_tradeoff(
					perfs,
					x = list(yield='Yield (mean annual catch, kt)'),
					y = list(stability='Stability (-MAPC)'),
					colour = list(class='Class'),
					shape = list(class='Class')
				)
			figcaption
				Trade-off between yield and stability performance statistics across all the management procedures evaluated.

		There is an unsurprising performance trade off between yield and abundance ({refer #figure-yield-abundance-all}). In general, higher catches lead to higher exploitation rates and reduced biomass which in turn leads to reduced catch rates.

		Generally there is a high correlation between the abundance performance statistics for each of the main fisheries ({refer #figure-abundance-corrs}). Note however, that some MPs, particularly those resulting in overall higher abundance do result in higher relative abundance for M-PL and E-GN. This is most likely a result of the lower exploitation rates under these MPs which in turn creates an increase in the biomass of larger sized skipjack which are more fully selected by these fisheries.

		figure #figure-yield-abundance-all
			r format png size 17x10cm
				plot_tradeoff(
					perfs,
					x = list(yield='Yield (mean annual catch, `000 t)'),
					y = list(cpue_m_pl='Abundance M-PL'),
					colour = list(class='Class'),
					shape = list(class='Class')
				)
			figcaption
				Trade-off between yield and abundance performance statistics across all the management procedures evaluated.

		figure #figure-abundance-corrs
			r format png size 17x17cm
				p1 = ggplot(perfs,aes(x=cpue_w_ps,y=cpue_m_pl,colour=class,shape=class)) + 
						geom_point(size=3) + 
						geom_abline(linetype=3) + 
						labs(x='W-PS CPUE',y='M-PL CPUE')
				p2 = ggplot(perfs,aes(x=cpue_m_pl,y=cpue_e_gn,colour=class,shape=class)) + 
						geom_point(size=3) + 
						geom_abline(linetype=3) + 
						labs(x='M-PL CPUE',y='E-GN CPUE')
				multiplot(p1,p2)
			figcaption
				Correlation between the abundance performance statistics between the three main fisheries.

  section
	  h1 Performance of the BRule class
				
		figure
			r format png size 17x10cm
				plot_tradeoff(
				  subset(perfs,class=="Maldives2016"),
				  x = list(yield='Yield (mean annual catch, `000 t)'),
				  y = list(status='Status (mean of B/B0)'),
				  colour = list(p3='Emax'),
				  shape = list(p4='Threshold')
				)
	figcaption
				Trade-off between yield and stock status for alternative instances of the the BRule class of management procedure.
				
	section
		h1 Performance of the BRule class

		figure
			r format png size 17x10cm
				plot_tradeoff(
					subset(perfs,class=="BRule"),
					x = list(yield='Yield (mean annual catch, `000 t)'),
					y = list(status='Status (mean of B/B0)'),
					colour = list(p2='Target'),
					shape = list(p3='Threshold')
				)
			figcaption
				Trade-off between yield and stock status for alternative instances of the the BRule class of management procedure.

	section
		h1 Performance of the FRange class

		figure
			r format png size 17x10cm
				plot_tradeoff(
					subset(perfs,class=="FRange"),
					x = list(yield='Yield (mean annual catch, `000 t)'),
					y = list(status='Status (mean of B/B0)'),
					colour = list(p3='Target'),
					shape = list(p4='Buffer')
				)
			figcaption
				Trade-off between yield and stock status for alternative instances of the the FRange class of management procedure.

		figure
			r format png size 17x10cm
				plot_tradeoff(
					subset(perfs,class=="FRange"),
					x = list(yield='Yield (mean annual catch, `000 t)'),
					y = list(stability='Stability'),
					colour = list(p1='Frequency'),
					shape = list(p4='Buffer')
				)
			figcaption
				Trade-off between yield and stock status for alternative instances of the the FRange class of management procedure.

	section
		h1 Performance of the IRate class
		
		figure
			r format png size 17x10cm
				plot_tradeoff(
					subset(perfs,class=="IRate"),
					x = list(yield='Yield (mean annual catch, `000 t)'),
					y = list(status='Status (mean of B/B0)'),
					colour = list(p3='Target'),
					shape = list(p4='Buffer')
				)
			figcaption
				Trade-off between yield and stock status for alternative instances of the the IRate class of management procedure.

if 0

	r
		# Summarise sensitivity to a parameter
		par <- 'movement_stay.value'
		values <- samples[,par]
		# Calculate quantiles for parameter
		quantiles <- quantile(values,p=seq(0,1,0.1))
		# Cut
		performance <- subset(performances,procedure==3)
		performance$quantile <- as.integer(cut(values,quantiles))
		sensitivity <- ddply(performance,.(quantile),summarise,
			yield = mean(catches_total),
			status = mean(status_mean)
		)

		ggplot(sensitivity) +
			geom_line(aes(x=quantile,y=status))
			
		sens$par <- floor(sens$spawners_unfished/100000)
		sens$par <- floor(sens$mortality_base/0.1)*0.1
		sens$par <- floor(sens$recruits_ma/0.05)*0.05
		sens$par <- floor(sens$movement_nw_ma/0.05)*0.05
		
		temp <- ddply(sens,.(procedure,par),summarise,
		  yield=mean(catches_total),
		  status=mean(status_mean)
		)
		temp$procedure <- factor(temp$procedure)
		ggplot(temp,aes(x=par,y=yield,colour=procedure,shape=procedure)) + 
		  geom_point()
		
